#include <stdio.h>
#include <ctype.h>

// Function to encrypt using the Affine Caesar Cipher
char encryptAffineCaesar(char ch, int b) {
    if (isalpha(ch)) {
        char encrypted;
        if (islower(ch)) {
            encrypted = ((ch - 'a') + b) % 26 + 'a';
        } else {
            encrypted = ((ch - 'A') + b) % 26 + 'A';
        }
        return encrypted;
    } else {
        return ch;
    }
}

// Function to decrypt using the Affine Caesar Cipher
char decryptAffineCaesar(char ch, int b) {
    if (isalpha(ch)) {
        char decrypted;
        if (islower(ch)) {
            decrypted = ((ch - 'a' - b + 26) % 26) + 'a';
        } else {
            decrypted = ((ch - 'A' - b + 26) % 26) + 'A';
        }
        return decrypted;
    } else {
        return ch;
    }
}

int main() {
    int b;

    // Get key value 'b' from the user
    printf("Enter the value of 'b' for the Affine Caesar Cipher: ");
    scanf("%d", &b);

    // Encryption
    char plaintext[100];
    printf("Enter the plaintext: ");
    scanf(" %[^\n]s", plaintext);

    printf("Encrypted text: ");
    for (int i = 0; plaintext[i] != '\0'; i++) {
        printf("%c", encryptAffineCaesar(plaintext[i], b));
    }
    printf("\n");

    // Decryption
    printf("Decrypted text: ");
    for (int i = 0; plaintext[i] != '\0'; i++) {
        printf("%c", decryptAffineCaesar(encryptAffineCaesar(plaintext[i], b), b));
    }
    printf("\n");

    return 0;
}
